{"version":3,"sources":["reportWebVitals.js","redux/data.js","redux/soil_properties.js","components/Utils/make_input.js","redux/input_costs.js","redux/other_info.js","components/Utils/calculator.js","components/SoilProperties/soil_properties_input.js","components/SoilProperties/farm_soil.js","components/SoilProperties/index.js","components/InputCosts/index.js","components/OtherInfo/index.js","components/BundleRecommendation/index.js","components/BundleJustification/table.js","components/BundleJustification/Bar.js","components/BundleJustification/index.js","components/Panes/index.js","components/App/index.js","redux/reducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_DATA","SET_ERROR","initialState","loading","errorOccured","farmerCost","selectError","s","data","error","selectErrorOccured","selectLoading","selectLocations","Object","keys","selectAllBundles","selectData","selectFarmerCost","soilPropertiesInitialState","ph","phThreshold","potassium","potassiumThreshold","phosphorus","phosphorusThreshold","selectedFarm","SET_PH","SET_POTASSIUM","SET_PHOSPHORUS","SET_SELECTED_FARM","setPH","value","type","setPotassium","setPhosphorus","selectPH","soilProperties","selectPHThreshold","selectPHSufficient","selectPotassium","selectPotassiumThreshold","selectPotassiumSufficient","selectPhosphorus","selectPhosphorusThreshold","selectPhosphorusSufficient","selectSelectedFarm","MakeInput","name","state","set","units","formatter","children","labelClassNames","inputClassNames","dispatch","useDispatch","useState","input","setInput","focused","setFocused","useEffect","parsed","Number","parseFloat","isNaN","a","className","htmlFor","style","onBlur","e","onFocus","onChange","target","inputCostsInitialState","seedCost","limeCost","inoculumCost","phosphorusCost","potassiumCost","SET_SEED_COST","SET_LIME_COST","SET_INOCULUM_COST","SET_PHOSPHORUS_COST","SET_POTASSIUM_COST","setSeedCost","setLimeCost","setInoculumCost","setPhosphorusCost","setPotassiumCost","selectSeedCost","inputCosts","selectLimeCost","selectInoculumCost","selectPhosphorusCost","selectPotassiumCost","otherInfoInitialState","inputsBudget","plotSize","priceOfGrain","SET_INPUTS_BUDGET","SET_PLOT_SIZE","SET_PRICE_OF_GRAIN","setInputsBudget","setPlotSize","setPriceOfGrain","selectInputsBudget","otherInfo","selectPlotSize","selectPriceOfGrain","bundleColorMap","calcBundleData","bundle","priceOfSoybean","location","budget","phSufficient","phosphorusSufficient","potassiumSufficient","bundleData","undef","bundleCost","soilRequiresBundle","margins","Yield","affordable","bundleSize","length","totalMargins","roi","bundleYield","required","totalCost","color","useAllBundleData","bundles","useSelector","map","CountrySelect","props","countries","selected","c","SoilPropertiesInput","FarmSoilProperties","loc","farm","soilPrpos","soil","scope","Soil","Texture","pH","K","OM","SoilProperties","InputCosts","href","rel","OtherInfo","MakeRecBundle","b","classNames","abbrevToFullIngredient","BundleRecommendation","allBundleData","recBundle","filter","sort","data1","data2","split","FarmerRow","toFixed","BundleRow","useBundleData","id","req","aff","join","dangerouslySetInnerHTML","__html","BundleTable","width","height","padding","left","right","top","bottom","mark","encoding","x","title","field","axis","labelFontSize","titleFontSize","y","BundleJustification","VegaLite","spec","table","InternalPane","buttonsBefore","hash","navId","goToNext","goToPrev","nextName","prevName","buttons","onClick","undefined","Pane","PanesContainer","Math","random","toString","substring","idPrefix","makeId","useCallback","setHash","timeout","saveTimeout","out","i","prevId","nextId","push","window","onresize","clearTimeout","setTimeout","Intro","App","DATA_URL","process","fetch","json","setData","catch","console","setError","JSON","stringify","rootReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8d0ec05.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const SET_DATA = \"data/setData\";\nconst SET_ERROR = \"data/setError\";\n\n/* State */\n//================================================================================\nconst initialState = {\n    loading: true,\n    errorOccured: false,\n    farmerCost: 173,\n};\n/* Actions */\n//================================================================================\nexport function setData(data) {\n    return {\n\ttype: SET_DATA,\n\tvalue: data\n    };\n}\nexport function setError(error) {\n    return {\n\ttype: SET_ERROR,\n\tvalue: error\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectError = s => s.data.error;\nexport const selectErrorOccured = s => s.data.errorOccured;\nexport const selectLoading = s => s.data.loading;\n\nexport const selectLocations = s => Object.keys(s.data.data[\"yield\"]);\nexport const selectBundlesForLocation = loc => s => Object.keys(s.data.data[\"yield\"][loc]);\nexport const selectYield = (loc, bundle) => s => s.data.data[\"yield\"][loc][bundle];\nexport const selectAllBundles = s => [\"s\", \"si\", \"sl\", \"sp\", \"sk\", \"sil\",\n\t\t\t\t      \"sip\", \"sik\", \"slp\", \"slk\", \"spk\", \"silp\",\n\t\t\t\t      \"silk\", \"sipk\", \"slpk\", \"silpk\"];\nexport const selectData = s => s.data.data[\"yield\"];\nexport const selectFarmerCost = s => s.data.farmerCost;\n\nexport const selectFarmSoilProperties = loc => s => s.data.data.soil[loc];\n\n/* Reducer */\n//================================================================================\nexport function dataReducer(state=initialState, action) {\n    switch (action.type) {\n    case SET_DATA:\n\tstate.data = action.value;\n\tstate.loading = false;\n\tbreak;\n    case SET_ERROR:\n\tstate.errorOccured = true;\n\tstate.error = action.value;\n\tstate.loading = false;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","// TODO: maybe give this a directory and split stuff up\nimport { SET_DATA } from './data';\n\n/* State */\n//================================================================================\nexport const soilPropertiesInitialState = {\n    ph: 2,\n    phThreshold: 6,\n    potassium: 0,\n    potassiumThreshold: 110,\n    phosphorus: 0,\n    phosphorusThreshold: 30,\n    selectedFarm: null,\n}\n\n/* Actions */\n//================================================================================\nconst SET_PH = \"soilProperties/setPH\";\nconst SET_POTASSIUM = \"soilProperties/setPotassium\";\nconst SET_PHOSPHORUS = \"soilProperties/setPhosphorus\";\nconst SET_SELECTED_FARM = \"soilProperties/setSelectedFarm\";\n\nexport function setPH(value) {\n    return {\n\ttype: SET_PH,\n\tvalue: value\n    };\n}\nexport function setPotassium(value) {\n    return {\n\ttype: SET_POTASSIUM,\n\tvalue: value\n    };\n}\nexport function setPhosphorus(value) {\n    return {\n\ttype: SET_PHOSPHORUS,\n\tvalue: value\n    };\n}\nexport function setSelectedFarm(value) {\n    return {\n\ttype: SET_SELECTED_FARM,\n\tvalue: value\n    };\n}\n\n/* Selectors */\n//================================================================================\nexport const selectPH = (s) => s.soilProperties.ph;\nexport const selectPHThreshold = (s) => s.soilProperties.phThreshold;\nexport const selectPHSufficient = (s) => s.soilProperties.ph >= s.soilProperties.phThreshold;\n\nexport const selectPotassium = (s) => s.soilProperties.potassium;\nexport const selectPotassiumThreshold = (s) => s.soilProperties.potassiumThreshold;\nexport const selectPotassiumSufficient = (s) => s.soilProperties.potassium >= s.soilProperties.potassiumThreshold;\n\nexport const selectPhosphorus = (s) => s.soilProperties.phosphorus;\nexport const selectPhosphorusThreshold = (s) => s.soilProperties.phosphorusThreshold;\nexport const selectPhosphorusSufficient = (s) => s.soilProperties.phosphorus >= s.soilProperties.phosphorusThreshold;\n\nexport const selectSelectedFarm = (s) => s.soilProperties.selectedFarm;\n/* Reducer */\n//================================================================================\nexport function soilPropertiesReducer(state = soilPropertiesInitialState, action) {\n    switch (action.type) {\n    case SET_PH:\n\tstate.ph = action.value;\n\tbreak;\n    case SET_PHOSPHORUS:\n\tstate.phosphorus = action.value;\n\tbreak;\n    case SET_POTASSIUM:\n\tstate.potassium = action.value;\n\tbreak;\n    case SET_SELECTED_FARM:\n\tstate.selectedFarm = action.value;\n\tbreak;\n\t// EXTERNAL\n    case SET_DATA:\n\tstate.selectedFarm = Object.keys(action.value[\"soil\"])[0];\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const MakeInput = ({name, state, set, units, formatter, children, labelClassNames, inputClassNames}) => { \n    const dispatch = useDispatch();\n    const [input, setInput] = useState(state);\n    const [focused, setFocused] = useState(false);\n    useEffect(() => {\n\tlet parsed = Number.parseFloat(input);\n\tif (!isNaN(parsed) && parsed && parsed !== state) {\n\t    dispatch(set(parsed));\n\t}\n    }, [dispatch, state, set, input]);\n\n    if (!formatter) {\n\tformatter = (a) => a;\n    }\n\n    return <>\n\t<label className={labelClassNames} htmlFor={name}> {children} </label>\n\t<div style={{\"whiteSpace\": \"nowrap\"}} className={inputClassNames}>\n\t<input style={{\"width\": \"5rem\"}} name={name} value={focused ? input : formatter(input)} onBlur={(e) => setFocused(false)} onFocus={(e) => setFocused(true)} onChange={e => setInput(e.target.value)} />\n\t<span className=\"units\"> {units} </span>\n\t</div>\n\t</>;\n};\n","/* State */\n//================================================================================\nexport const inputCostsInitialState = {\n    seedCost: 44.8,\n    limeCost: 37.25,\n    inoculumCost: 14.14,\n    phosphorusCost: 109.93,\n    potassiumCost: 58.15,\n};\n/* Actions */\n//================================================================================\nconst SET_SEED_COST = \"inputCosts/setSeedCost\";\nconst SET_LIME_COST = \"inputCosts/setLimeCost\";\nconst SET_INOCULUM_COST = \"inputCosts/setInoculumCost\";\nconst SET_PHOSPHORUS_COST = \"inputCosts/setPhosphorusCost\";\nconst SET_POTASSIUM_COST = \"inputCosts/setPotassiumCost\";\n\nexport function setSeedCost(value) {\n    return {\n\ttype: SET_SEED_COST,\n\tvalue: value\n    };\n}\nexport function setLimeCost(value) {\n    return {\n\ttype: SET_LIME_COST,\n\tvalue: value\n    };\n}\nexport function setInoculumCost(value) {\n    return {\n\ttype: SET_INOCULUM_COST,\n\tvalue: value\n    };\n}\nexport function setPhosphorusCost(value) {\n    return {\n\ttype: SET_PHOSPHORUS_COST,\n\tvalue: value\n    };\n}\nexport function setPotassiumCost(value) {\n    return {\n\ttype: SET_POTASSIUM_COST,\n\tvalue: value\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectSeedCost = (s) => s.inputCosts.seedCost;\nexport const selectLimeCost = (s) => s.inputCosts.limeCost;\nexport const selectInoculumCost = (s) => s.inputCosts.inoculumCost;\nexport const selectPhosphorusCost = (s) => s.inputCosts.phosphorusCost;\nexport const selectPotassiumCost = (s) => s.inputCosts.potassiumCost;\n\n/* Reducer */\n//================================================================================\nexport function inputCostsReducer(state = inputCostsInitialState, action) {\n    switch (action.type) {\n    case SET_SEED_COST:\n\tstate.seedCost = action.value;\n\tbreak;\n    case SET_LIME_COST:\n\tstate.limeCost = action.value;\n\tbreak;\n    case SET_INOCULUM_COST:\n\tstate.inoculumCost = action.value;\n\tbreak;\n    case SET_PHOSPHORUS_COST:\n\tstate.phosphorusCost = action.value;\n\tbreak;\n    case SET_POTASSIUM_COST:\n\tstate.potassiumCost = action.value;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","/* State */\n//================================================================================\nexport const otherInfoInitialState = {\n    inputsBudget: 200,\n    plotSize: .5,\n    priceOfGrain: 400\n};\n/* Actions */\n//================================================================================\nconst SET_INPUTS_BUDGET = \"otherInfo/setInputsBudget\";\nconst SET_PLOT_SIZE= \"otherInfo/setPlotSize\";\nconst SET_PRICE_OF_GRAIN = \"otherInfo/setPriceOfGrain\";\n\nexport function setInputsBudget(value) {\n    return {\n\ttype: SET_INPUTS_BUDGET,\n\tvalue: value\n    };\n}\nexport function setPlotSize(value) {\n    return {\n\ttype: SET_PLOT_SIZE,\n\tvalue: value\n    };\n}\nexport function setPriceOfGrain(value) {\n    return {\n\ttype: SET_PRICE_OF_GRAIN,\n\tvalue: value\n    };\n}\n/* Selectors */\n//================================================================================\nexport const selectInputsBudget = (s) => s.otherInfo.inputsBudget;\nexport const selectPlotSize = (s) => s.otherInfo.plotSize;\nexport const selectPriceOfGrain = (s) => s.otherInfo.priceOfGrain;\n\n/* Reducer */\n//================================================================================\nexport function otherInfoReducer(state = otherInfoInitialState, action) {\n    switch (action.type) {\n    case SET_INPUTS_BUDGET:\n\tstate.inputsBudget = action.value;\n\tbreak;\n    case SET_PLOT_SIZE:\n\tstate.plotSize = action.value;\n\tbreak;\n    case SET_PRICE_OF_GRAIN:\n\tstate.priceOfGrain = action.value;\n\tbreak;\n    default:\n\tbreak;\n    }\n    return state;\n}\n","import { useSelector } from 'react-redux';\n\nimport { selectPHSufficient,\n\t selectPotassiumSufficient,\n\t selectPhosphorusSufficient, } from  '../../redux/soil_properties';\nimport { selectSeedCost,\n\t selectLimeCost,\n\t selectPhosphorusCost,\n\t selectPotassiumCost,\n\t selectInoculumCost } from '../../redux/input_costs';\nimport { selectFarmerCost, selectAllBundles, selectData } from '../../redux/data';\nimport { selectSelectedFarm } from '../../redux/soil_properties';\nimport { selectPlotSize,\n\t selectInputsBudget,\n\t selectPriceOfGrain } from '../../redux/other_info';\n\n\nconst bundleColorMap = {\n    \"s\" : \"#ff0000a0\",\n    \"si\": \"#ffff40\",\n    \"sl\": \"#ffff40\",\n    \"sp\": \"#ffff30\",\n    \"sk\": \"#ffff30\",\n    \"sil\": \"#0000ffa0\",\n    \"sip\": \"#0000ffa0\",\n    \"sik\": \"#0000ffa0\",\n    \"slp\": \"#0000ffa0\",\n    \"slk\": \"#0000ffa0\",\n    \"spk\": \"#0000ffa0\",\n    \"silp\": \"#00ff00a0\",\n    \"silk\": \"#00ff00a0\",\n    \"sipk\": \"#00ff00a0\",\n    \"slpk\": \"#00ff00a0\",\n    \"silpk\": \"#ff00ffa0\"\n}\n// this is ugly but whatever...\nconst calcBundleData = ({ bundle, data, location, priceOfSoybean, farmerCost, budget, plotSize, phSufficient, phosphorusSufficient, limeCost, phosphorusCost, potassiumCost, potassiumSufficient, inoculumCost, seedCost, bundleData}) => {\n    // no data for bundle at location\n    if (!bundleData) {\n\treturn {\n\t    undef: true,\n\t};\n    }\n\n    let bundleCost = 0;\n    let soilRequiresBundle = true;\n    for (let c of bundle) {\n\tswitch (c) {\n\tcase \"s\":\n\t    bundleCost += seedCost;\n\t    break;\n\tcase \"i\":\n\t    bundleCost += inoculumCost;\n\t    break;\n\tcase \"l\":\n\t    if (phSufficient) {\n\t\tsoilRequiresBundle = false;\n\t    }\n\t    bundleCost += limeCost;\n\t    break;\n\tcase \"p\":\n\t    if (phosphorusSufficient) {\n\t\tsoilRequiresBundle = false;\n\t    }\n\t    bundleCost += phosphorusCost;\n\t    break;\n\tcase \"k\":\n\t    if (potassiumSufficient) {\n\t\tsoilRequiresBundle = false;\n\t    }\n\t    bundleCost += potassiumCost;\n\t    break;\n\tdefault:\n\t    break;\n\t    //throw \"Unknown character in bundle\";\n\t}\n    }\n    const margins = bundleData.Yield * priceOfSoybean - bundleCost - farmerCost;\n    const affordable = bundleCost * plotSize < budget;\n    return {\n\tbundle: bundle,\n\tundef: false,\n\tbundleSize: bundle.length,\n\tbundleCost: bundleCost,\n\tmargins: margins,\n\ttotalMargins: plotSize * margins,\n\troi: margins/bundleCost,\n\tbundleYield: bundleData.Yield,\n\trequired: soilRequiresBundle,\n\taffordable: affordable,\n\ttotalCost: bundleCost + farmerCost,\n\tcolor: bundleColorMap[bundle]\n    };\n};\n\nexport const useAllBundleData = () => {\n    const bundles = useSelector(selectAllBundles);\n    const data = useSelector(selectData);\n    const location = useSelector(selectSelectedFarm);\n    const priceOfSoybean = useSelector(selectPriceOfGrain);\n    const farmerCost = useSelector(selectFarmerCost);\n    const budget = useSelector(selectInputsBudget);\n    const plotSize = useSelector(selectPlotSize);\n    const phSufficient = useSelector(selectPHSufficient);\n    const phosphorusSufficient = useSelector(selectPhosphorusSufficient);\n    const limeCost = useSelector(selectLimeCost);\n    const phosphorusCost = useSelector(selectPhosphorusCost);\n    const potassiumCost = useSelector(selectPotassiumCost);\n    const potassiumSufficient = useSelector(selectPotassiumSufficient);\n    const inoculumCost = useSelector(selectInoculumCost);\n    const seedCost = useSelector(selectSeedCost);\n\n    return bundles.map((bundle) => calcBundleData({ bundle,\n\t\t\t\t\t\t    data,\n\t\t\t\t\t\t    location,\n\t\t\t\t\t\t    priceOfSoybean,\n\t\t\t\t\t\t    farmerCost,\n\t\t\t\t\t\t    budget,\n\t\t\t\t\t\t    plotSize,\n\t\t\t\t\t\t    phSufficient,\n\t\t\t\t\t\t    phosphorusSufficient,\n\t\t\t\t\t\t    limeCost,\n\t\t\t\t\t\t    phosphorusCost,\n\t\t\t\t\t\t    potassiumCost,\n\t\t\t\t\t\t    potassiumSufficient,\n\t\t\t\t\t\t    inoculumCost,\n\t\t\t\t\t\t    seedCost,\n\t\t\t\t\t\t    bundleData: data[location][bundle] }));\n};\nexport const useBundleData = (bundle) => {\n    const data = useSelector(selectData);\n    const location = useSelector(selectSelectedFarm);\n    const priceOfSoybean = useSelector(selectPriceOfGrain);\n    const farmerCost = useSelector(selectFarmerCost);\n    const budget = useSelector(selectInputsBudget);\n    const plotSize = useSelector(selectPlotSize);\n    const phSufficient = useSelector(selectPHSufficient);\n    const phosphorusSufficient = useSelector(selectPhosphorusSufficient);\n    const limeCost = useSelector(selectLimeCost);\n    const phosphorusCost = useSelector(selectPhosphorusCost);\n    const potassiumCost = useSelector(selectPotassiumCost);\n    const potassiumSufficient = useSelector(selectPotassiumSufficient);\n    const inoculumCost = useSelector(selectInoculumCost);\n    const seedCost = useSelector(selectSeedCost);\n    const bundleData = data[location][bundle];\n\n    return calcBundleData({ bundle,\n\t\t\t    data,\n\t\t\t    location,\n\t\t\t    priceOfSoybean,\n\t\t\t    farmerCost,\n\t\t\t    budget,\n\t\t\t    plotSize,\n\t\t\t    phSufficient,\n\t\t\t    phosphorusSufficient,\n\t\t\t    limeCost,\n\t\t\t    phosphorusCost,\n\t\t\t    potassiumCost,\n\t\t\t    potassiumSufficient,\n\t\t\t    inoculumCost,\n\t\t\t    seedCost,\n\t\t\t    bundleData });\n}\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectSelectedFarm,\n\t setSelectedFarm,\n\t selectPH,\n\t selectPHThreshold,\n\t selectPHSufficient,\n\t setPH,\n\t selectPotassium,\n\t selectPotassiumThreshold,\n\t selectPotassiumSufficient,\n\t setPotassium,\n\t selectPhosphorus,\n\t selectPhosphorusThreshold,\n\t selectPhosphorusSufficient,\n\t setPhosphorus } from '../../redux/soil_properties';\nimport { selectLocations } from '../../redux/data';\n\nimport { MakeInput } from '../Utils';\n\nconst CountrySelect = (props) => {\n    const dispatch = useDispatch();\n    const countries = useSelector(selectLocations);\n    const selected = useSelector(selectSelectedFarm);\n    return <div className=\"row\">\n\t<label className=\"col\" htmlFor=\"location\"> Nearest SMART Farm: </label>\n\t<select className=\"col form-select me-5\"\n    style={{\"width\": \"min-content\"}}\n    name=\"location\"\n    value={selected}\n    onChange={(e) => dispatch(setSelectedFarm(e.target.value))}\n\t>\n\t{countries.map((c) => <option key={c} value={c}> {c} </option>)}\n    </select>\n\t</div>;\n}\n\nconst SoilPropertiesInput = (props) => {\n    const ph = useSelector(selectPH);\n    const phThreshold = useSelector(selectPHThreshold);\n    const phSufficient = useSelector(selectPHSufficient);\n    const potassium = useSelector(selectPotassium);\n    const potassiumThreshold = useSelector(selectPotassiumThreshold);\n    const potassiumSufficient = useSelector(selectPotassiumSufficient);\n    const phosphorus = useSelector(selectPhosphorus);\n    const phosphorusThreshold = useSelector(selectPhosphorusThreshold);\n    const phosphorusSufficient = useSelector(selectPhosphorusSufficient);\n\n    return <form className=\"border border-3 shadow p-2 mb-2 me-4\" style={{\"width\": \"max-content\"}}>\n\t<div className=\"row mb-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" name=\"ph\" state={ph} set={setPH}>\n\tpH (threshold: {phThreshold})\n\t<span className={`badge ms-1 ${phSufficient ? 'bg-success' : 'bg-danger'}`}> {phSufficient ? 'Sufficient' : 'Insufficient' } </span>\n    </MakeInput>\n\t</div>\n\t<div className=\"row mb-3\">\n\t<MakeInput labelClassNames=\"col-6\" inputClassNames=\"col\" name=\"potassium\" state={potassium} set={setPotassium} units=\"mg/kg\">\n\tpotassium (threshold: {potassiumThreshold})\n\t<span className={`badge ms-1 ${potassiumSufficient ? 'bg-success' : 'bg-danger'}`}> {potassiumSufficient ? 'Sufficient' : 'Insufficient' } </span>\n\t</MakeInput>\n\t</div>\n\t<div className=\"row\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" name=\"phosphorus\" state={phosphorus} set={setPhosphorus} units=\"mg/kg\">\n\tphosphorus (threshold: {phosphorusThreshold})\n\t<span className={`badge ms-1 ${phosphorusSufficient ? 'bg-success' : 'bg-danger'}`}> {phosphorusSufficient ? 'Sufficient' : 'Insufficient' } </span>\n\t</MakeInput>\n\t</div>\n\t<CountrySelect />\n\t</form>;\n}\n\nexport default SoilPropertiesInput;\n","import { useSelector } from \"react-redux\";\nimport { selectFarmSoilProperties } from \"../../redux/data.js\";\nimport { selectSelectedFarm } from \"../../redux/soil_properties.js\";\n\nconst FarmSoilProperties = (props) => {\n    const farm = useSelector(selectSelectedFarm);\n    const soilPrpos = useSelector(selectFarmSoilProperties(farm));\n\n    return <div className=\"border border-3 shadow\">\n\t<h4 className=\"m-3 text-decoration-underline\">Measured Soil Properties for sample farm in {farm}</h4>\n\t<table className=\"align-middle table table-bordered fs-5 mx-auto\" style={{\"width\": \"max-content\"}}>\n\t<tbody>\n\t<tr><th scope=\"row\">Soil</th><td>{soilPrpos.Soil || \"unkown\"}</td></tr>\n\t<tr><th scope=\"row\">Texture</th><td> {soilPrpos.Texture || \"unkown\"}</td></tr>\n\t<tr><th scope=\"row\">pH</th><td>{soilPrpos.pH || \"unkown\"}</td></tr>\n\t<tr><th scope=\"row\">K</th><td>{soilPrpos.K || \"unkown\"} </td></tr>\n\t<tr><th scope=\"row\">OM</th><td>{soilPrpos.OM || \"unkown\"}</td></tr>\n\t</tbody>\n\t</table>\n\t</div>;\n};\n\nexport default FarmSoilProperties;\n","import SoilPropertiesInput from './soil_properties_input';\nimport FarmSoilProperties from './farm_soil';\n\nconst SoilProperties = (props) => {\n    return <div className=\"\">\n\t<div className=\"w-100\">\n\t<h1> Soil Properties </h1>\n\t<p className=\"fs-5\">\n\tSoil health is critical for soybean production as insufficient amounts of nutrients in the soils can restrict plant growth and yields. Knowing soil nutrient concentrations is important in deciding which inputs to invest in to maximize yields.\n\t<br />\n\tIn this section, you will put in your field’s soil pH, P, and K levels into the boxes below and select your location to get comparable yield responses. Thresholds are based off Mehlich-3 values for phosphorus and potassium. If your soil P test was performed using Bray-P for phosphorus, multiple your values by 1.35 to convert to Mehlich-3 values. If your soil K test was performed using ammonium acetate, multiply your values by 1.14 to convert to Mehlich-3 values. Any values that are above the soil response threshold are considered ‘sufficient’ and bundles with those inputs will not be considered for recommendation. \n\t</p>\n\t</div>\n\t<div className=\"d-flex justify-content-center flex-wrap\">\n\t<SoilPropertiesInput />\n\t<FarmSoilProperties />\n\t</div>\n\t</div>;\n};\n\nexport default SoilProperties;\n","import { useSelector } from 'react-redux';\n\nimport { setSeedCost,\n\t selectSeedCost,\n\t setLimeCost,\n\t selectLimeCost,\n\t setInoculumCost,\n\t selectInoculumCost,\n\t setPhosphorusCost,\n\t selectPhosphorusCost,\n\t setPotassiumCost,\n\t selectPotassiumCost } from '../../redux/input_costs';\nimport { setInputsBudget,\n\t selectInputsBudget,\n\t setPlotSize,\n\t selectPlotSize } from '../../redux/other_info';\n\nimport { MakeInput } from '../Utils';\n\nconst InputCosts = (props) => {\n    const seedCost = useSelector(selectSeedCost);\n    const limeCost = useSelector(selectLimeCost);\n    const inoculumCost = useSelector(selectInoculumCost);\n    const phosphorusCost = useSelector(selectPhosphorusCost);\n    const potassiumCost = useSelector(selectPotassiumCost);\n    const inputsBudget = useSelector(selectInputsBudget);\n    const plotSize = useSelector(selectPlotSize);\n\n    const formatter = (s) => '$' + s;\n    return <div className=\"d-flex flex-column justify-content-center\">\n\t<h1> Input Budget and Costs </h1>\n\t<p className=\"fs-5\">\n\tA farmer’s budget can make some inputs, or bundles of inputs, financially impractical. The SMART Farms use a stepwise bundling approach that considers your cost of inputs and budget to determine bundle recommendations for your unique situation. This stepwise approach balances the risk of incorporating new technologies into current farming practices. You will put in your starting input budget (USD), plot size (hectares), and the cost of the four inputs considered (USD). Any bundles that cost more than your allotted budget will not be considered for recommendation.\n\n    For help converting local currency to USD please use <a href=\"https://www.xe.com/currencyconverter/\" target=\"_blank\" rel=\"noreferrer\">this currency converter</a>. \n\t</p>\n\t<div className=\"d-flex flex-direction justify-content-center\">\n    <form className=\"border border-3 shadow p-2 mb-2 me-4 align-self-center\" style={{\"width\": \"max-content\"}}>\n\t<div className=\"row mb-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"seedCost\" state={seedCost} set={setSeedCost} units=\"per hectare\">\n\tSeed:\n    </MakeInput>\n\t</div>\n\t<div className=\"row my-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"limeCost\" state={limeCost} set={setLimeCost} units=\"per hectare\">\n\tLime:\n    </MakeInput>\n\t</div>\n\t<div className=\"row my-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"inoculumCost\" state={inoculumCost} set={setInoculumCost} units=\"per hectare\">\n\tInoculum:\n    </MakeInput>\n\t</div>\n\t<div className=\"row my-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"phosphorusCost\" state={phosphorusCost} set={setPhosphorusCost} units=\"per hectare\">\n\tPhosphorus:\n    </MakeInput>\n\t</div>\n\t<div className=\"row my-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"potassiumCost\" state={potassiumCost} set={setPotassiumCost} units=\"per hectare\">\n\tPotassium:\n    </MakeInput>\n\t</div>\n\t</form>\n    <form className=\"border border-3 shadow p-2 mb-2 me-4 align-self-center\" style={{\"width\": \"max-content\"}}>\n\t<div className=\"row\">\n\t<MakeInput labelClassNames=\"col-5\" inputClassNames=\"col-7\" formatter={formatter} name=\"inputsBudget\" state={inputsBudget} set={setInputsBudget} units=\"per hectare\">\n\tInputs Budget:\n    </MakeInput>\n\t</div>\n\t<div className=\"row mt-3\">\n\t<MakeInput labelClassNames=\"col-5\" inputClassNames=\"col-7\" name=\"plotSize\" state={plotSize} set={setPlotSize} units={`hectare${plotSize > 1 ? 's' : ''}`}>\n\tPlot Size:\n    </MakeInput>\n\t</div>\n\t</form>\n\t</div>\n    </div>;\n}\nexport default InputCosts;\n","import { useSelector } from 'react-redux';\n\nimport { setPriceOfGrain,\n\tselectPriceOfGrain,\n       } from '../../redux/other_info';\n\nimport { MakeInput } from '../Utils';\n\nconst OtherInfo = (props) => {\n    const priceOfGrain = useSelector(selectPriceOfGrain);\n\n    const formatter = (s) => '$' + s;\n    return <div className=\"d-flex flex-column justify-content-center\">\n\t<h1> Price of Grain</h1>\n\t<p className=\"fs-5\">\n\tThe final step in determining which bundle is right for you is to consider the gross margins of each bundle. This is tied to the price of grain at the time of sale. From the remaining choices, the bundle with the highest gross margin (revenue minus the cost of inputs) will be selected as your bundle recommendation. \n\t</p>\n    <form className=\"border border-3 shadow p-2 mb-2 me-4 align-self-center\" style={{\"width\": \"max-content\"}}>\n\t<div className=\"row mb-3\">\n\t<MakeInput labelClassNames=\"col\" inputClassNames=\"col\" formatter={formatter} name=\"priceOfGrain\" state={priceOfGrain} set={setPriceOfGrain} units=\"per MT\">\n\tPrice of Grain:\n    </MakeInput>\n\t</div>\n\t</form>\n    </div>;\n}\nexport default OtherInfo;\n","import { useSelector } from 'react-redux';\n\nimport { useAllBundleData } from '../Utils';\n\nlet seedInfo = \"https://7b7dcda8-7264-4c41-b9a2-b2e845d0c5d1.usrfiles.com/ugd/7b7dcd_f26de695289d47f28626edb854721c9a.pdf\";\nlet innoculumInfo = \"https://7b7dcda8-7264-4c41-b9a2-b2e845d0c5d1.usrfiles.com/ugd/7b7dcd_2c0c8b735d164c928fafa927d983abaf.pdf\";\nconst abbrevToFullIngredient = (b) => {\n    let classNames = \"badge fs-3 mx-1 border border-2 border-primary bg-transparent text-reset\"\n  switch (b) {\n    case \"s\":\n      return (<span className={classNames} key=\"s\"> <a href={seedInfo}>Seed</a> </span>);\n    case \"i\":\n      return (<span className={classNames} key=\"i\"> <a href={innoculumInfo}>Inoculum</a> </span>);\n    case \"l\":\n      return (<span className={classNames} key=\"l\"> Lime </span>);\n    case \"p\":\n      return (<span className={classNames} key=\"p\"> Phosphorus </span>);\n    case \"k\":\n      return (<span className={classNames} key=\"k\"> Potassium </span>);\n    default:\n      return;\n  }\n}\nconst MakeRecBundle = ({bundle}) => {\n    return <p className=\"text-center\">\n\t{bundle.map((b) => abbrevToFullIngredient(b))}\n\t</p>;\n}\n\nconst BundleRecommendation = (props) => {\n    const allBundleData = useSelector(useAllBundleData);\n\n    const recBundle = [...allBundleData]\n\t  .filter((data) => data.affordable && data.required && !data.undef )\n\t  .sort((data1, data2) => data2.margins - data1.margins);\n    if (recBundle.length === 0) {\n\treturn <h1> No Recommended Bundle (Either nothing is required, or nothing is affordable)</h1>;\n    }\n    return <div className=\"mx-auto mt-5 p-5 shadow border border-success border-3\" style={{\"width\": \"max-content\"}}>\n\t<div>\n\t<h1>Recomended Bundle:</h1>\n\t<MakeRecBundle bundle={recBundle[0].bundle.split('')} />\n\t</div>\n\t</div>;\n}\nexport default BundleRecommendation;\n","import { useSelector } from 'react-redux';\n\nimport { selectFarmerCost, selectAllBundles, selectData } from '../../redux/data';\nimport { selectSelectedFarm } from '../../redux/soil_properties';\nimport { selectPlotSize,\n\t selectPriceOfGrain } from '../../redux/other_info';\n\nimport { useBundleData } from '../Utils';\n\nconst FarmerRow = (props) => {\n    const data = useSelector(selectData);\n    const location = useSelector(selectSelectedFarm);\n    const priceOfSoybean = useSelector(selectPriceOfGrain);\n    const farmerCost = useSelector(selectFarmerCost);\n    const plotSize = useSelector(selectPlotSize);\n\n    const bundleData = data[location][\"Farmer\"];\n    const margins = bundleData.Yield * priceOfSoybean - farmerCost;\n    return (<tr className=\"farmer\">\n\t    <td>Farmer{/*Bundle */}</td> \n\t    <td>N/A{/*Cost of bundle */}</td> \n\t    <td>${ farmerCost.toFixed(2) }{/*Total cost */}</td> \n\t    <td>{ bundleData.Yield }{/*prediction */}</td> \n\t    <td>${margins.toFixed(2)}{/*margins */}</td> \n\t    <td>${(margins * plotSize).toFixed(2)}{/*total margins */}</td> \n\t    <td>N/A{/*roi */}</td> \n\t    <td>N/A{/* required */}</td> \n\t    <td>N/A{/* aff */}</td> \n\t</tr>\n    );\n}\nconst BundleRow = ({ bundle }) => {\n    const { undef,\n\t    bundleCost,\n\t    margins,\n\t    totalMargins,\n\t    roi,\n\t    bundleYield,\n\t    required,\n\t    affordable,\n\t    totalCost } = useBundleData(bundle);\n\n    if (undef) {\n\treturn (<tr id={bundle} className=\"undefined\">\n\t\t<td> {bundle} {/*Bundle */}</td>\n\t\t<td> N/A{/*Cost of bundle */}</td>\n\t\t<td> N/A {/*Total cost per (Ha)*/}</td>\n\t\t<td> N/A {/*prediction */}</td>\n\t\t<td> N/A {/*margins */}</td>\n\t\t<td> N/A {/*total margins */}</td>\n\t\t<td> N/A {/*roi */}</td>\n\t\t<td> N/A {/* req */}</td>\n\t\t<td> N/A {/* affordable */}</td>\n\t\t</tr>);\n    }\n    let className = [required ? \"bundle-required\" : \"not-bundle-required\",\n\t\t     affordable ? \"affordable\" : \"not-affordable\",\n\t\t     `table-bundle-${bundle.length}`,\n\t\t    ];\n    let req = required ? \"&#10003;\": \"&#x2717;\";\n    let aff = affordable ? \"&#10003;\": \"&#x2717;\";\n    return (<tr id={bundle} className={className.join(\" \")}>\n\t    <td> {bundle} {/*Bundle */}</td> \n\t    <td> ${bundleCost.toFixed(2)}{/*Cost of bundle */}</td> \n\t    <td> ${ (totalCost).toFixed(2)} {/*Total cost per (Ha)*/}</td> \n\t    <td> { bundleYield.toFixed(2) } {/*prediction */}</td> \n\t    <td> ${ margins.toFixed(2) }{/*margins */}</td> \n\t    <td> ${totalMargins.toFixed(2)}{/*total margins */}</td> \n\t    <td> {roi.toFixed(2)}{/*roi */}</td> \n\t    <td dangerouslySetInnerHTML={{__html: req} /*req*/} /> \n\t    <td dangerouslySetInnerHTML={{__html: aff} /*affordable */} /> \n\t    </tr>\n\t   );\n}\nexport const BundleTable = (props) => {\n    const bundles = useSelector(selectAllBundles);\n    return(<table className=\"table table-bordered border border-3\">\n\t   <thead>\n\t   <tr>\n\t   <th scope=\"col\"> Bundle </th>\n\t   <th scope=\"col\"> Cost of Bundle </th>\n\t   <th scope=\"col\"> Total Cost (per Ha) </th>\n\t   <th scope=\"col\"> Yield Prediction </th>\n\t   <th scope=\"col\"> Margins (per Ha) </th>\n\t   <th scope=\"col\"> Total Gross Margins </th>\n\t   <th scope=\"col\"> Return on Investment </th>\n\t   <th scope=\"col\"> Required </th>\n\t   <th scope=\"col\"> Affordable </th>\n\t   </tr>\n\t   </thead>\n\t   <tbody>\n\t   <FarmerRow />\n\t   { bundles.map((e) => <BundleRow key={e} bundle={e} />) }\n\t   </tbody>\n\t   </table>);\n}\n\n","\nexport default {\n    width: \"container\",\n    height: \"container\",\n    padding: { left: 5, right: 5, top: 5, bottom: 5 },\n\n    data: {name: 'table',},\n    mark: 'bar',\n    encoding: {\n\tx: {\n\t    title: 'Bundle ID',\n\t    field: 'bundle',\n\t    type: 'ordinal',\n\t    axis: {\n\t\tlabelFontSize: 20,\n\t\ttitleFontSize: 20,\n\t    },\n\t    sort: null,\n\t},\n\ty: {\n\t    title: 'Gross Margins',\n\t    field: 'margins',\n\t    type: 'quantitative',\n\t    axis: {\n\t\tlabelFontSize: 20,\n\t\ttitleFontSize: 20,\n\t    }\n\t},\n\tcolor: {\n\t    field: 'color',\n\t    type: 'nominal',\n\t    \"scale\": null\n\t}\n    }\n};\n","import { useSelector } from 'react-redux';\nimport { VegaLite } from 'react-vega'\n\nimport { BundleTable } from './table'\nimport spec from './Bar';\n\nimport { useAllBundleData } from '../Utils/calculator';\n\nconst BundleJustification = (props) => {\n    const bundleData = useAllBundleData();\n    return <div>\n\t<BundleTable />\n\t<VegaLite\n    width=\"800\"\n    height=\"500\"\n    spec={spec}\n    data={{table: bundleData.filter((e) => e.required && e.affordable)}} />\n\n\t</div>;\n};\nexport default BundleJustification;\n","import React, { useCallback, useEffect, useState } from 'react';\n\n// TODO add a canAdvnace arg to panes which is a function which determines\n// whether the nextButton should be enabled or disabled\nconst InternalPane = ({buttonsBefore, children, hash, navId, goToNext, goToPrev, nextName, prevName}) => {\n    const buttons = <div className={`d-flex mb-1 mb-md-5 ${prevName ? \"justify-content-between\" : \"justify-content-end\"} ${buttonsBefore ? 'mt-3' : ''}`}>\n\t\t       <button type=\"button\" className={`btn btn-primary me-1 ${prevName ? \"\" : \"d-none\"}`}\n\t\t\t       onClick={goToPrev}\n\t\t       >\n\t\t\t   <i className=\"bi-arrow-left\" style={{\"fontSize\": \"1.5rem\"}}></i>\n\t\t\t   &nbsp; {prevName}\n\t\t       </button>\n\t\t       <button type=\"button\" className={`btn btn-primary ${nextName ? \"\" : \"d-none\"}`}\n\t\t\t       onClick={goToNext}\n\t\t       >\n\t\t\t   {nextName} &nbsp;\n\t\t\t   <i className=\"bi-arrow-right\" style={{\"fontSize\": \"1.5rem\"}}></i>\n\t\t       </button>\n\t\t    </div>;\n    return <div id={navId} className={`vh-100 overflow-visible vw-100 ${hash === navId ? \"\" : \"d-none\"}`}>\n\t       <div className=\"d-flex h-100 justify-content-between flex-column container-md\">\n\t\t   {buttonsBefore ? buttons : undefined}\n\t\t   <div className=\"row\">\n\t\t       <div className=\"col\">\n\t\t\t   {children}\n\t\t       </div>\n\t\t   </div>\n\t\t   {buttonsBefore ? undefined : buttons}\n\t       </div>\n\t   </div>;\n}\nexport const Pane = ({children}) => children;\n\nexport const PanesContainer = ({ children }) => {\n    const [idPrefix, setIdPrefix] = useState(Math.random().toString(36).substring(7));\n    const makeId = useCallback((x) => `${idPrefix}-${x.props.navId}`, [idPrefix]);\n    const [hash, setHash] = useState(makeId(children[0]));\n    const [timeout, saveTimeout] = useState(undefined);\n\n\n    let out = []\n    for (let i = 0; i < children.length; i++) {\n\tlet goToNext = undefined;\n\tlet goToPrev = undefined;\n\tlet prevName = undefined;\n\tlet nextName = undefined;\n\tif (i !== 0) {\n\t    let prevId = makeId(children[i - 1]);\n\t    goToPrev = () => {\n\t\tsetHash(prevId);\n\t    };\n\t    prevName = children[i-1].props.name;\n\t}\n\tif (i !== children.length - 1) {\n\t    const nextId = makeId(children[i + 1]);\n\t    goToNext = () => {\n\t\tsetHash(nextId);\n\t    };\n\t    nextName = children[i+1].props.name;\n\t}\n\tconst id = makeId(children[i]);\n\tout.push(<InternalPane\n\t\t     buttonsBefore={children[i].props.buttonsBefore}\n\t\t     key={id}\n\t\t     hash={hash}\n\t\t     navId={id}\n\t\t     goToNext={goToNext}\n\t\t     nextName={nextName}\n\t\t     goToPrev={goToPrev}\n\t\t     prevName={prevName}>\n\t\t     {children[i]}\n\t\t </InternalPane>);\n    }\n\n    useEffect(() => {\n\twindow.location.hash = hash;\n\t}, [hash]);\n    useEffect(() => {\n\twindow.onresize = () => {\n\t    if (timeout) {\n\t\tclearTimeout(timeout);\n\t    }\n\t    saveTimeout(setTimeout(() => {\n\t\twindow.location.hash = hash\n\t\tsaveTimeout(undefined);\n\t    }, 500));\n\t};\n    }, [timeout, hash]);\n\n    return <div className=\"d-flex\" style={{\"width\": \"min-content\"}}>\n\t       {/* TODO improve this */}\n\t       {/*<h1 className={showScroll ? \"show\" : \"noshow\"}\n\t\t   id=\"dont-scroll\">\n\t\t   Hey, press buttons, don't scroll!\n\t\t   </h1> */}\n\t       {out}\n\t   </div>;\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setError,\n\t selectErrorOccured,\n\t selectError,\n\t selectLoading,\n\t setData } from '../../redux/data';\n\nimport SoilProperties from '../SoilProperties';\nimport InputCosts from '../InputCosts';\nimport OtherInfo from '../OtherInfo';\nimport BundleRecommendation from '../BundleRecommendation';\nimport BundleJustification from '../BundleJustification';\nimport { PanesContainer, Pane } from '../Panes';\n\nconst Intro = () => {\n    return <div className=\"intro\">\n\t<h1>\n\tSMART Farm Input Recommendation Calculator \n    </h1>\n\t<p className=\"fs-5\"> \nSoybean production requires agricultural inputs such as lime, phosphorus and potassium fertilizer, and rhizobium inoculant to ensure a profitable crop. However, soil conditions along with a farmer’s limited budget can make some inputs unnecessary or financially impractical. The Soybean Innovation Lab (SIL) conducts input omission trials, or <a href=\"https://7b7dcda8-7264-4c41-b9a2-b2e845d0c5d1.usrfiles.com/ugd/7b7dcd_738bcfbf8bbc4ee78d1a0ec4f806ec5f.pdf\">SMART Farms</a>, in several locations throughout Africa to address unique, location-specific constraints to recommend input bundles that will maximize yields. Using the data acquired from these SMART Farms, SIL has developed an input bundle recommendation calculator in order to give the same evidence-based, cost-effective bundle recommendations to a broader audience that may not have the means to conduct their own SMART Farm trials. This calculator considers each user’s unique situation including location, soil properties, and budget to generate the input bundle recommendation that results in the highest Return on Investment (ROI) for the grower.  \n\t</p>\n\t<h2> Instructions </h2>\n\t<p className=\"fs-5\">Proceed through each section and input appropriate values for soil properties and location, input budget and costs, and price of grain in your area. The recommended bundle will be the bundle that produces the highest gross margins and addresses your soil fertility needs and budget constraints. This calculator also creates a graph and table showing the gross margins of all possible bundles and which criteria (budget or soil fertility) they fulfill to provide a better understanding of how your recommended input bundle was selected. \n\t</p>\n\n\t</div>;\n}\n\nconst App = () => {\n    const dispatch = useDispatch();\n\n    const errorOccured = useSelector(selectErrorOccured);\n    const error = useSelector(selectError);\n    const loading = useSelector(selectLoading);\n\n    // maybe one day use redux-thunk, but not right now.\n    const DATA_URL = `${process.env.PUBLIC_URL}/data.json`;\n    useEffect(() => {\n\tfetch(DATA_URL)\n\t    .then((data) => data.json())\n\t    .then((data) => dispatch(setData(data)))\n\t    .catch((error) => {\n\t\tconsole.error(error);\n\t\tdispatch(setError(error))\n\t    });\n    }, [dispatch, DATA_URL]);\n    if (errorOccured) {\n\treturn <div>\n\t    <h1> error!</h1>\n\t    <pre> {JSON.stringify(error)}</pre>\n\t    </div>;\n    }\n    if (loading) {\n\treturn <h1> loading </h1>;\n    }\n    return <PanesContainer>\n\t<Pane name=\"Intro\" navId=\"intro\"> <Intro /> </Pane>\n\t<Pane name=\"Soil Properties\" navId=\"soil-properties\"> <SoilProperties />  </Pane>\n\t<Pane name=\"Input Costs\" navId=\"input-costs\"> <InputCosts />  </Pane>\n\t<Pane name=\"Other Info\" navId=\"other-info\"> <OtherInfo />  </Pane>\n\t<Pane name=\"Bundle Recommendation\" navId=\"bundle-rec\"> <BundleRecommendation/>  </Pane>\n\t<Pane buttonsBefore={true} name=\"Bundle Justification\" navId=\"bundle-just\"> <BundleJustification/>  </Pane>\n    </PanesContainer>;\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nimport { soilPropertiesReducer } from './soil_properties';\nimport { dataReducer } from './data';\nimport { inputCostsReducer } from './input_costs';\nimport { otherInfoReducer } from './other_info';\n\nconst rootReducer = combineReducers({\n    soilProperties: soilPropertiesReducer,\n    data: dataReducer,\n    inputCosts: inputCostsReducer,\n    otherInfo: otherInfoReducer\n});\n\nexport default rootReducer;\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App'\nimport rootReducer from './redux/reducer';\n\nimport './index.scss';\n\nconst store = createStore(rootReducer,\n\t\t\t  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nrender(\n    <Provider store={store}>\n\t<React.StrictMode>\n\t    <App />\n\t</React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}